trigger:
- master

pr:
- master

variables:
  appDir: fur2feathers
stages: 
- stage: build
  jobs: 
  - job: build
    pool:
      name: Azure Pipelines
      vmImage: ubuntu-latest
      demands:
      - npm
      - java

    steps:
      - task: DockerCompose@0
        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'HealthPairDocker'
          dockerComposeFile: '**/docker-compose.prod.yml'
          action: 'Build services'

  - job: test

    pool:
      vmImage: ubuntu-latest

    steps:
    
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: ./healthpair
        verbose: false
    
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'HealthPairSC'
        organization: '2002-feb24-net'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '2002-feb24-net_HealthPair-Client'
        cliProjectName: 'healthpairclientapp'
        cliSources: '$(appDir)/src'
        extraProperties: |
          sonar.coverage.exclusions=**/*.spec.ts
          sonar.typescript.lcov.reportPaths=$(appDir)/coverage/$(appDir)/lcov.info
    - script: npx ng test --browsers ChromeHeadless --no-watch --code-coverage
      workingDirectory: ./fur2feathers
      continueOnError: true
      displayName: ng test
    - task: SonarCloudAnalyze@1
      displayName: sonarcloud analysis run

    - task: SonarCloudPublish@1
      inputs:
          pollingTimeoutSec: '300'
      displayName: sonarcloud results build publish

- stage: deploy

  dependsOn: build

  jobs:

  - deployment: deploy_dev

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - checkout: self

          - download: none

          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Container Registry'
              dockerRegistryEndpoint: 'HealthPairDocker'
              dockerComposeFile: '**/docker-compose.prod.yml'
              action: 'Build services'
            displayName: docker build
          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Container Registry'
              dockerRegistryEndpoint: 'HealthPairDocker'
              dockerComposeFile: '**/docker-compose.prod.yml'
              action: 'Push services'
            displayName: docker push

          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'Azure subscription 1(a2152353-9b25-48cf-bad2-948e50f630f2)'
              appName: 'HealthPair-Client'
              multicontainerConfigFile: 'docker-compose.prod.yml'
            displayName: app service deploy